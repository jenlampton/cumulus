<?php
/**
 * @file
 * Provides a Flash-based 3D tag cloud.
 * Based on WP-Cumulus for WordPress, by Roy Tanck.
 */

/**
 * Implements hook_menu().
 */
function cumulus_menu() {
  $items['admin/config/cumulus'] = array(
    'title' => 'Cumulus',
    'description' => 'Cumulus settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cumulus_admin_settings'),
    'access arguments' => array('administer cumulus'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'cumulus.admin.inc',
  );

  return $items;
}

function cumulus_default_config() {
  $vocabularies = taxonomy_vocabulary_load_multiple(FALSE);
  return array(
    'vocabs' => array_keys($vocabularies),
    'tagadelic_step' => variable_get('cumulus_tagadelic_step', 6),
    'tagadelic_limit' => variable_get('cumulus_tagadelic_limit', 24),
    'flash_width' => variable_get('cumulus_flash_width', 200),
    'flash_height' => variable_get('cumulus_flash_height', 150),
    'flash_background' => variable_get('cumulus_flash_background', 'ffffff'),
    'flash_transparency' => variable_get('cumulus_flash_transparency', 'false'),
    'flash_color' => variable_get('cumulus_flash_color', 'ff0000'),
    'flash_color2' => variable_get('cumulus_flash_color2', '000000'),
    'flash_hicolor' => variable_get('cumulus_flash_hicolor', '666666'),
    'flash_speed' => variable_get('cumulus_flash_speed', 100),
    'flash_distribute' => variable_get('cumulus_flash_distribute', 'true'),
    'flash_font_size' => variable_get('cumulus_flash_font_size', 10),
    'flash_font_size_interval' => variable_get('cumulus_flash_font_size_interval', 2),
  );
}

/**
 * Implements hook_block_info().
 */
function cumulus_block_info() {
  $blocks = array();

  $blocks['cumulus'] = array(
    'info' => t('Cumulus'),
    'description' => t('Provides a Flash-based 3D tag cloud.'),
    'cache' => BACKDROP_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function cumulus_block_configure($delta = '', $settings = array()) {
  module_load_include('inc', 'cumulus', 'cumulus.admin');
  return cumulus_configure_form(array(), $settings);
}

/**
 * Implements hook_block_view().
 */
function cumulus_block_view($delta = '', $settings = array(), $contexts = array()) {
  $config = $settings;
  $tags = tagadelic_get_weighted_tags(array_keys($config['vocabs']), $config['tagadelic_step'], $config['tagadelic_limit']);
  $tags = tagadelic_sort_tags($tags);
  $tags_formatted_flash = theme('cumulus_weighted', array('terms' => $tags, 'config' => $config));
  $tags_formatted_alt = theme('tagadelic_weighted', array('terms' => $tags));

  $js = drupal_get_path('module', 'cumulus') . '/js/cumulus.js';
  drupal_add_js($js, array('preprocess' => FALSE));

  // Flash params
  $param = array(
    'path_to_flash' => base_path() . drupal_get_path('module', 'cumulus') . '/cumulus.swf',
    'width' => $config['flash_width'],
    'height' => $config['flash_height'],
    'background' => $config['flash_background'],
    'color' => '0x' . $config['flash_color'],
    'color2' => '0x' . $config['flash_color2'],
    'hicolor' => '0x' . $config['flash_hicolor'],
    'speed' => $config['flash_speed'],
    'distribute' => $config['flash_distribute'],
    'transparency' => $config['flash_transparency'],
  );
  if ($config['flash_transparency'] == 'true') {
    $param['transparency'] = 'widget_so.addParam("wmode", "transparent");';
  }

  // link to view with additional tags
  $vocabs_string = implode(',', $config['vocabs']);
  $links['more'] = l(t('more tags'), 'tagadelic/chunk/' . $vocabs_string);
  // output content
  $blocks['subject'] = t('Cumulus Tag Cloud');
  // param with value 9 indicates required version of flash player - see http://blog.deconcept.com/swfobject/
  $blocks['content'] = <<<EOT
        <div id="tags">
        {$tags_formatted_alt}
        <script type="text/javascript">
          var rnumber = Math.floor(Math.random()*9999999);
          var widget_so = new SWFObject("{$param['path_to_flash']}?r="+rnumber, "cumulusflash", "{$param['width']}", "{$param['height']}", "9", "{$param['background']}");
          {$param['transparency']}
          widget_so.addParam("allowScriptAccess", "always");
          widget_so.addVariable("tcolor", "{$param['color']}");
          widget_so.addVariable("tcolor2", "{$param['color2']}");
          widget_so.addVariable("hicolor", "{$param['hicolor']}");
          widget_so.addVariable("tspeed", "{$param['speed']}");
          widget_so.addVariable("distr", "{$param['distribute']}");
          widget_so.addVariable("mode", "tags");
          widget_so.addVariable("tagcloud", "{$tags_formatted_flash}");
          widget_so.write("tags");
        </script>
        </div>
        <div class="more-link">{$links['more']}</div>
EOT;
  return $blocks;
}

/**
 * Implements hook_theme().
 */
function cumulus_theme() {
  return array(
    'cumulus_weighted' => array(
      'variables' => array('terms' => NULL, 'config' => cumulus_default_config()),
    ),
  );
}

/**
 * Themeing function.
 */
function theme_cumulus_weighted($variables) {
  $terms = $variables['terms'];
  $config = $variables['config'];
  $output = '<tags>';
  foreach ($terms as $term) {
    // assign font size
    $font_size = (intval($term->weight) * $config['flash_font_size_interval']) + ($config['flash_font_size'] - $config['flash_font_size_interval']);
    $entity = taxonomy_term_load($term->tid);
    $uri = entity_uri('taxonomy_term', $entity);
    $output .= l($term->name, $uri['path'], array('absolute' => TRUE, 'attributes' => array('style' => '"font-size: ' . $font_size . 'px;"'))) . " \n";
  }
  $output .= '</tags>';
  $output = urlencode($output);

  return $output;
}

/**
 * Clear the cache of all Cumulus (in effect, Tagadelic) data.
 */
function cumulus_clear_cache() {
  $cid = "tagadelic";
  $table = "cache";
  $wildcard = TRUE;
  cache_clear_all($cid, $table, $wildcard);
  drupal_set_message(t('The module\'s cache has been cleared'), 'status');
}

/**
 * Implements hook_permission().
 */
function cumulus_permission() {
  return array(
    'administer cumulus' => array(
      'title' => t('administer cumulus'),
      'description' => t('TODO Add a description for \'administer cumulus\''),
    ),
  );
}

